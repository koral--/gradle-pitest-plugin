buildscript {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.application'
apply plugin: 'pl.droidsonroids.pitest'

android {
    namespace 'pl.drodsonroids.pitest'
    compileSdkVersion 34
    defaultConfig {
        applicationId "pl.droidsonroids.robolectric"
        minSdkVersion 25
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    junitVersion = '4.13.2'
    robolectricVersion = '4.9'
    supportLibVersion = '27.1.1'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    compileOnly 'org.jetbrains:annotations-java5:16.0.3'
    implementation "com.android.support:support-annotations:$supportLibVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
}

repositories {
    google()
    mavenCentral()
}

pitest {
    if (project.hasProperty('pitestTargetClasses')) {
        targetClasses = [project.getProperty('pitestTargetClasses')]
    } else {
        targetClasses = ['pl.droidsonroids.robolectric.*']
    }
    if (project.hasProperty('pitestTargetTests')) {
        targetTests = [project.getProperty('pitestTargetTests')]
    }
    threads = 8
    timeoutConstInMillis = 30 * 1000
    outputFormats = ['XML', 'HTML']
    verbose = true
    mutators = ['STRONGER', 'EXPERIMENTAL_NAKED_RECEIVER']
    excludeMockableAndroidJar = true
}
